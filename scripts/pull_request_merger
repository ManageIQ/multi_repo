#!/usr/bin/env ruby

require "bundler/inline"
gemfile do
  source "https://rubygems.org"
  gem "multi_repo", require: "multi_repo/cli", path: File.expand_path("..", __dir__)
end

opts = Optimist.options do
  synopsis "Merge a set of pull requests, also setting assignee and labels."

  opt :prs,      "The list of PRs to merge",           :type => :strings, :required => true
  opt :assignee, "GitHub user to assign when merging", :type => :string,  :required => true
  opt :labels,   "Labels to apply when merging",       :type => :strings

  MultiRepo::CLI.common_options(self)
end

prs =
  begin
    MultiRepo::Service::Github.parse_prs(opts[:prs])
  rescue ArgumentError => err
    Optimist.die :prs, err.message
  end

github = MultiRepo::Service::Github.new(:dry_run => opts[:dry_run])

prs.each do |repo_name, pr_number|
  puts MultiRepo::CLI.header("#{repo_name}##{pr_number}")

  begin
    github.merge_pull_request(repo_name, pr_number)
  rescue Octokit::MethodNotAllowed => err
    raise unless err.to_s.include?("Pull Request is not mergeable")

    puts "** WARN: Pull Request is not mergeable".light_yellow
  end

  github.add_labels_to_an_issue(repo_name, pr_number, opts[:labels]) if opts[:labels].present?
  github.assign_user(repo_name, pr_number, opts[:assignee])

  puts
end
